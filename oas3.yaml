openapi: 3.0.1
info:
  title: Shelter API
  description: |
    A website which provides information about pets which are being sheltered and are available
    for adoption.

  license:
    name: MIT
  version: 1.0.0

servers:
  - url: https://codess-shelter.azurewebsites.net

tags:
  - name: health
    description: |
      APIs used to determine whether your service is healthy and running as expected.
      
      This API will likely be consumed by your backend service orchestrator and monitoring tooling
      to automatically identify and isolate/repair broken instances or serve an error page while your
      service recovers.

  - name: pets
    description: |
      APIs used to enumerate and manage the collection of pets which are available for adoption.
      
      This API will likely be consumed primarily by your user interface to show available pets
      and allow the registration and management of your fluffy friends.

  - name: inquiries
    description: |
      APIs used to collect and review inquiries made by customers about specific pets.

      This API will primarily be used by customers through a "submit enquiry" form, allowing them
      to quickly request more information about a specific pet.

paths:
  /api/v1/health:
    get:
      tags:
        - health

      summary: Get Health (v1)
      description: Gets information about the current health state of your service.
      operationId: health_v1
      responses:
        200:
          description: The service is healthy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthV1"
              example:
                status: Healthy
                results:
                  database:
                    status: Healthy
                    description: Connected to upstream database server.
                    data: {}
        500:
          description: The service is unhealthy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthV1"
              example:
                status: Unhealthy
                results:
                  database:
                    status: Unhealthy
                    description: Unable to connect to the upstream database server.
                    data: {}

  /api/v1/pets:
    get:
      tags:
        - pets
      summary: Get Pets (v1)
      description: Gets the list of pets which have been registered with our shelter.
      operationId: pets_list_v1
      responses:
        200:
          description: The list of pets.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PetV1"
              example:
                - id: "225c5957d7f450baec75a67ede427e9"
                  name: "Fido"
                  status: available
                  kind: dog
                  breed: Labrador
                  description: "Fido is a good boy who loves long walks in the park, playing with his ball and licking faces. He's great with children and an absolute sweetheart."
                  birthday: 2016-04-15
                  photos:
                    - https://upload.wikimedia.org/wikipedia/commons/b/b3/Labrador_on_Quantock_%282307909488%29.jpg

        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001

    post:
      security:
        - AzureAD:
          - Pets.Write
      tags:
        - pets
      summary: Add Pet (v1)
      description: Registers a new pet our shelter and gives them a unique ID.
      operationId: pets_add_v1
      requestBody:
        description: The details of the pet you are entering into the shelter.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetV1"
      responses:
        201:
          description: The newly added pet with its unique ID.
          headers:
            Location:
              schema:
                type: string
              description: The URL at which you will be able to request the details of this pet in future.
              required: true
              example: "https://localhost:5001/api/v1/pet/225c5957d7f450baec75a67ede427e9"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetV1"
              example: 
                id: "225c5957d7f450baec75a67ede427e9"
                name: "Fido"
                status: available
                kind: dog
                breed: Labrador
                description: "Fido is a good boy who loves long walks in the park, playing with his ball and licking faces. He's great with children and an absolute sweetheart."
                birthday: 2016-04-15
                photos:
                  - https://upload.wikimedia.org/wikipedia/commons/b/b3/Labrador_on_Quantock_%282307909488%29.jpg

        400:
          description: The request you submitted did not consist of valid JSON data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "The request you submitted did not consist of valid JSON data."
                status: 400
                traceId: 0HLLO6QBUHOL3:00000001
        401:
          description: You did not provide a valid authentication header with your request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You did not provide a valid Authorization header."
                status: 401
                traceId: 0HLLO6QBUHOL3:00000001
        403:
          description: You do not have permission to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You do not have permission to access this resource."
                status: 403
                traceId: 0HLLO6QBUHOL3:00000001
        422:
          description: The request you submitted did not meet the schema requirements for a valid pet entry.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                errors:
                  kind:
                    - The value 'car' is not valid.
                title: "One or more validation errors occurred."
                status: 422
                traceId: 0HLLO6QBUHOL3:00000001
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001

  /api/v1/pet/{id}:
    get:
      tags:
        - pets
      summary: Get Pet (v1)
      description: Fetches the details of a specific pet from our service.
      operationId: pet_v1
      parameters:
        - name: id
          in: path
          description: The unique ID of the pet you wish to retrieve.
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{32}$
      responses:
        200:
          description: The pet which you requested information about.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetV1"
              example: 
                id: "225c5957d7f450baec75a67ede427e9"
                name: "Fido"
                status: available
                kind: dog
                breed: Labrador
                description: "Fido is a good boy who loves long walks in the park, playing with his ball and licking faces. He's great with children and an absolute sweetheart."
                birthday: 2016-04-15
                photos:
                  - https://upload.wikimedia.org/wikipedia/commons/b/b3/Labrador_on_Quantock_%282307909488%29.jpg
        404:
          description: The pet could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "The pet you requested could not be found."
                status: 404
                traceId: 0HLLO6QBUHOL3:00000001
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001

    patch:
      security:
        - AzureAD:
          - Pets.Write
      tags:
        - pets
      summary: Modify Pet (v1)
      description: Modifies the information about a pet
      operationId: pet_modify_v1
      parameters:
        - name: id
          in: path
          description: The unique ID of the pet you wish to modify.
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{32}$

      requestBody:
        description: The changes you wish to make to the pet's information.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PetV1"
            example:
              status: adopted

      responses:
        200:
          description: The newly modified pet's information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PetV1"
              example: 
                id: "225c5957d7f450baec75a67ede427e9"
                name: "Fido"
                status: available
                kind: dog
                breed: Labrador
                description: "Fido is a good boy who loves long walks in the park, playing with his ball and licking faces. He's great with children and an absolute sweetheart."
                birthday: 2016-04-15
                photos:
                  - https://upload.wikimedia.org/wikipedia/commons/b/b3/Labrador_on_Quantock_%282307909488%29.jpg
        401:
          description: You did not provide a valid authentication header with your request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You did not provide a valid Authorization header."
                status: 401
                traceId: 0HLLO6QBUHOL3:00000001
        403:
          description: You do not have permission to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You do not have permission to access this resource."
                status: 403
                traceId: 0HLLO6QBUHOL3:00000001
        404:
          description: The pet could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "The pet you requested could not be found."
                status: 404
                traceId: 0HLLO6QBUHOL3:00000001
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001

  /api/v1/inquiries:
    get:
      security:
        - AzureAD:
          - Inquiries.Read
      tags:
        - inquiries
      summary: Get Inquiries (v1)
      description: Gets the list of inquiries which have been submitted by customers.
      operationId: inquiries_list_v1
      responses:
        200:
          description: The list of inquiries which have been submitted by customers.

          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InquiryV1"
              example: 
                - id: "be7d7f767ed5e9c595aec44222575a0"
                  petId: "225c5957d7f450baec75a67ede427e9"
                  name: Charles
                  email: charles@xavier.edu
                  message: I'm a collector of wolverines and have a spectacularly large garden and mansion in which they are free to play. Please get in touch.


        400:
          description: The request you submitted did not consist of valid JSON data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "The request you submitted did not consist of valid JSON data."
                status: 400
                traceId: 0HLLO6QBUHOL3:00000001
        401:
          description: You did not provide a valid authentication header with your request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You did not provide a valid Authorization header."
                status: 401
                traceId: 0HLLO6QBUHOL3:00000001
        403:
          description: You do not have permission to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You do not have permission to access this resource."
                status: 403
                traceId: 0HLLO6QBUHOL3:00000001
        422:
          description: The request you submitted did not meet the schema requirements for a valid pet entry.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                errors:
                  kind:
                    - The value 'car' is not valid.
                title: "One or more validation errors occurred."
                status: 422
                traceId: 0HLLO6QBUHOL3:00000001
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001

    post:
      tags:
        - inquiries
      summary: Submit Inquiry (v1)
      description: |
                    Submits a new inquiry about the availability of a particular pet for adoption.

                    In general, this endpoint will be used on a pet's details page to allow prospective
                    adopters to submit their details and request more information about the pet before
                    visiting the shelter to view them.
      operationId: inquiries_add_v1
      requestBody:
        description: The details of your inquiry.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InquiryV1"
            example: 
              petId: "225c5957d7f450baec75a67ede427e9"
              name: Charles
              email: charles@xavier.edu
              message: I'm a collector of wolverines and have a spectacularly large garden and mansion in which they are free to play. Please get in touch.

      responses:
        201:
          description: The details of the submitted inquiry.
          headers:
            Location:
              schema:
                type: string
              description: The URL at which you will be able to request the details of this inquiry in future.
              required: true
              example: "https://localhost:5001/api/v1/inquiry/be7d7f767ed5e9c595aec44222575a0"

          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InquiryV1"
              example:
                id: "be7d7f767ed5e9c595aec44222575a0"
                petId: "225c5957d7f450baec75a67ede427e9"
                name: Charles
                email: charles@xavier.edu
                message: I'm a collector of wolverines and have a spectacularly large garden and mansion in which they are free to play. Please get in touch.


        400:
          description: The request you submitted did not consist of valid JSON data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "The request you submitted did not consist of valid JSON data."
                status: 400
                traceId: 0HLLO6QBUHOL3:00000001
        422:
          description: The request you submitted did not meet the schema requirements for a valid pet entry.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                errors:
                  kind:
                    - The value 'car' is not valid.
                title: "One or more validation errors occurred."
                status: 422
                traceId: 0HLLO6QBUHOL3:00000001
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001

  /api/v1/inquiry/{id}:
    get:
      security:
        - AzureAD:
          - Inquiries.Read
      tags:
        - inquiries
      summary: Get Inquiry (v1)
      description: Fetches the details of a specific inquiry from our service.
      operationId: inquiry_v1
      parameters:
        - name: id
          in: path
          description: The unique ID of the inquiry you wish to retrieve.
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{32}$
      responses:
        200:
          description: The inquiry which you requested information about.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InquiryV1"
              example: 
                id: "be7d7f767ed5e9c595aec44222575a0"
                petId: "225c5957d7f450baec75a67ede427e9"
                name: Charles
                email: charles@xavier.edu
                message: I'm a collector of wolverines and have a spectacularly large garden and mansion in which they are free to play. Please get in touch.
        401:
          description: You did not provide a valid authentication header with your request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You did not provide a valid Authorization header."
                status: 401
                traceId: 0HLLO6QBUHOL3:00000001
        403:
          description: You do not have permission to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You do not have permission to access this resource."
                status: 403
                traceId: 0HLLO6QBUHOL3:00000001
        404:
          description: The inquiry could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "The pet you requested could not be found."
                status: 404
                traceId: 0HLLO6QBUHOL3:00000001
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001

    patch:
      security:
        - AzureAD:
          - Inquiries.Write
      tags:
        - inquiries
      summary: Modify Inquiry (v1)
      description: Modifies the information about an inquiry
      operationId: inquiry_modify_v1
      parameters:
        - name: id
          in: path
          description: The unique ID of the inquiry you wish to modify.
          required: true
          schema:
            type: string
            pattern: ^[a-f0-9]{32}$

      requestBody:
        description: The changes you wish to make to the inquiry's information.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InquiryV1"
            example:
              name: "Charlie X"

      responses:
        200:
          description: The newly modified inquiry's information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InquiryV1"
              example: 
                
                id: "be7d7f767ed5e9c595aec44222575a0"
                petId: "225c5957d7f450baec75a67ede427e9"
                name: Charlie X
                email: charles@xavier.edu
                message: I'm a collector of wolverines and have a spectacularly large garden and mansion in which they are free to play. Please get in touch.
        401:
          description: You did not provide a valid authentication header with your request.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You did not provide a valid Authorization header."
                status: 401
                traceId: 0HLLO6QBUHOL3:00000001
        403:
          description: You do not have permission to access this resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "You do not have permission to access this resource."
                status: 403
                traceId: 0HLLO6QBUHOL3:00000001
        404:
          description: The pet could not be found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "The pet you requested could not be found."
                status: 404
                traceId: 0HLLO6QBUHOL3:00000001
        500:
          description: An error occurred on the server.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              example:
                title: "An internal server error occurred."
                status: 500
                traceId: 0HLLO6QBUHOL3:00000001


components:
  securitySchemes:
    AzureAD:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/v2.0/authorize
          tokenUrl: https://login.microsoftonline.com/common/oauth2/v2.0/token
          scopes:
            Inquiries.Read: Grants read access to the list of inquiries.
            Inquiries.Write: Grants write access to existing inquiry objects.
            Pets.Write: Grants write access to the pets collection.

  schemas:
    HealthV1:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          description: The current aggregate status of the service.
          enum:
            - Healthy
            - Degraded
            - Unhealthy
        results:
          type: object
          additionalProperties:
            type: object
            required:
              - status
              - description
            properties:
              status:
                type: string
                description: The current status of the service's component.
                enum:
                  - Healthy
                  - Degraded
                  - Unhealthy
              description:
                type: string
                description: A short description of this component's health.
              data:
                type: object
                additionalProperties: true
                properties: {}
          readOnly: true
          xml:
            name: Status
      xml:
        name: Health
      example:
        ok: true

    PetV1:
      required:
        - name
        - kind
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique ID of the pet in our database.
          readOnly: true
        name:
          type: string
          description: The pet's given name, used to call it for cuddles and petting.
        status:
          type: string
          description: The current adoption status of the pet.
          enum:
            - available
            - adopted
            - unavailable
        kind:
          type: string
          description: The kind of pet, might be a dog, cat or goldfish amongst others.
          enum:
            - dog
            - cat
            - goldfish
            - horse
            - hamster
        breed:
          type: string
          description: The breed of the pet, whether a Golden Retriever or Russian Blue.
        description:
          type: string
          description: A short description of the pet, may use Markdown for rich formatting.
        birthday:
          type: string
          format: date
          description: The date on which the pet was born, used to determine when treats should be purchased.
        photos:
          type: array
          description: A list of photographs of this pet to help warm hearts and put smiles on faces.
          items:
            type: string
            description: The URL at which the photo of this pet may be downloaded.
      example:
        id: "225c5957d7f450baec75a67ede427e9"
        name: "Fido"
        status: available
        kind: dog
        breed: Labrador
        description: "Fido is a good boy who loves long walks in the park, playing with his ball and licking faces. He's great with children and an absolute sweetheart."
        birthday: 2016-04-15
        photos:
          - https://upload.wikimedia.org/wikipedia/commons/b/b3/Labrador_on_Quantock_%282307909488%29.jpg

    InquiryV1:
      required:
        - petId
        - name
        - email
      properties:
        id:
          type: string
          format: uuid
          description: The unique ID of the inquiry in our database.
          readOnly: true
        petId:
          type: string
          format: uuid
          description: The unique ID of the pet that this inquiry focuses upon.
        name:
          type: string
          description: The name of the individual making the inquiry.
        email:
          type: string
          description: The email address of the individual making the inquiry.
        message:
          type: string
          description: The message attached with the inquiry, allowing the individual to state their intent.
      example:
        id: "be7d7f767ed5e9c595aec44222575a0"
        petId: "225c5957d7f450baec75a67ede427e9"
        name: Charles
        email: charles@xavier.edu
        message: I'm a collector of wolverines and have a spectacularly large garden and mansion in which they are free to play. Please get in touch.


    Error:
      type: object
      description: An error describing a problem that the server has encountered or identified.
      required:
        - status
        - traceId
        - title
      properties:
        status:
          type: number
          format: integer
          minimum: 400
          maximum: 599
          description: The HTTP status code corresponding to this error.
        title:
          type: string
          description: The human readable description of the HTTP status code.
        type:
          type: string
          description: The URI describing the specific error or class of errors this belongs to.
        traceId:
          type: string
          description: A unique trace ID which can be used to associate this error with any corresponding logs.
        errors:
          type: object
          description: Additional information about the errors which occurred while processing the request.
      example:
        errors:
          property:
            - The value 'invalid' is not valid.
        title: "One or more validation errors occurred."
        status: 400
        traceId: 0HLLO6QBUHOL3:00000001
